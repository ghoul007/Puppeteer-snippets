{
    "ImportPuppeteer": {
        "prefix": "g-ip",
        "body": "const ${0:puppeteer} = require('puppeteer');",
        "description": "Imports Puppeteer"
    },
    "ImportModule": {
        "prefix": "g-im",
        "body": "const ${2:moduleName} = require('${1:module}')",
        "description": "Imports Module"
    },
    "ImportPuppeteerFirefox": {
        "prefix": "g-ipf",
        "body": "const ${0:puppeteer} = require('puppeteer-firefox');",
        "description": "Imports Firefox-Puppeteer "
    },
    "puppeteerLaunch": {
        "prefix": "g-launch",
        "body": "const ${1:browser} = await puppeteer.launch($0);",
        "description": "Creates a Chromium instance"
    },
    "puppeteerLaunchHeadless": {
        "prefix": "g-launch-headless",
        "body": "const ${1:browser} = await puppeteer.launch({headless:false});",
        "description": "Creates a Chromium instance with headless egal false"
    },
    "browserClose": {
        "prefix": "g-browser-close",
        "body": "await browser.close();",
        "description": "Closes browser"
    },
    "IIFE": {
        "prefix": "g-iife",
        "body": "(async()=>{\n$0\n})()",
        "description": "IIFE Syntax"
    },
    "IncognitoBrowser": {
        "prefix": "g-browser-Incognit",
        "body": "const ${1:context} = await ${2:browser}.createIncognitoBrowserContext();",
        "description": "Creates a incognito browser"
    },
    "NewPage": {
        "prefix": "g-newPage",
        "body": "const ${1:page} = await ${2:browser}.newPage();",
        "description": "Create a new page"
    },
    "WaitForTarget": {
        "prefix": "g-waitForTarget",
        "body": "await browser.waitForTarget($0);",
        "description": "Waits until a predicat, this searches for a target in all browser contexts"
    },
    "Page$": {
        "prefix": "g-page$",
        "body": "await page.$('$0');",
        "description": "The method runs document.querySelector within the page."
    },
    "Page$$": {
        "prefix": "g-page$$",
        "body": "await page.$$('$0');",
        "description": "The method runs document.querySelectorAll within the page."
    },
    "Page.$eval": {
        "prefix": "g-page-$eval",
        "body": [
            "await page.$eval('$1', ele => {",
            "\t$0",
            "});"
        ],
        "description": "This method runs Array.from(document.querySelector(selector)) within the page and passes it as the first argument"
    },
    "Page.$$eval": {
        "prefix": "g-page-$$eval",
        "body": [
            "await page.$$eval('$1', eles => {",
            "\t$0",
            "});"
        ],
        "description": "This method runs Array.from(document.querySelectorAll(selector)) within the page and passes it as the first argument"
    },
    "PageClick": {
        "prefix": "g-page-click",
        "body": "await page.click('$0');",
        "description": "Clicks in the element"
    },
    "PageClose": {
        "prefix": "g-page-close",
        "body": "await page.close();",
        "description": "Closes the page"
    },
    "PageEmulate": {
        "prefix": "g-page-emulate",
        "body": "await page.emulate($0);",
        "description": "Emulates a given device metrics and user agent"
    },
    "PageFocus": {
        "prefix": "g-page-focus",
        "body": "await page.focus('$0');",
        "description": "Focuses an element within the page"
    },
    "PageGoBack": {
        "prefix": "g-page-goBack",
        "body": "await page.goBack();",
        "description": "Navigates to the previous page in the history"
    },
    "PageGoForward": {
        "prefix": "g-page-goForward",
        "body": "await page.goForward();",
        "description": "Navigates to the next page in the history"
    },
    "PageGoto": {
        "prefix": "g-page-goto",
        "body": "await page.goto('$0');",
        "description": "Navigates the page to a URL"
    },
    "PageHover": {
        "prefix": "g-page-hover",
        "body": "await page.hover('$0');",
        "description": "Hovers over the element"
    },
    "PageKeyboardDown": {
        "prefix": "g-page-keyboard-down",
        "body": "await page.keyboard.down('$0');",
        "description": "Dispatches a `keydown` event"
    },
    "PageKeyboardUp": {
        "prefix": "g-page-keyboard-up",
        "body": "await page.keyboard.up('$0');",
        "description": "Dispatches a `keyup` event"
    },
    "PageKeyboardPress": {
        "prefix": "g-page-keyboard-press",
        "body": "await page.keyboard.press('$0');",
        "description": "Presses on a specific key"
    },
    "PageKeyboardSendCharacter": {
        "prefix": "g-page-keyboard-sendCharacter",
        "body": "await page.keyboard.sendCharacter('$0');",
        "description": "Dispatches a `keypress` and `input` event"
    },
    "PageKeyboardType": {
        "prefix": "g-page-keyboard-type",
        "body": "await page.keyboard.type('$0');",
        "description": "Types a text into a focused element"
    }
}